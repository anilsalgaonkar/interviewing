class Solution:

    #This has time complexity of ncube (n3) 
    def longestPalindrome(self, s: str) -> str:
        start = 0
        longest = s[0]
        for c in s: #n times
            end = s.rfind(c,start+1)
            while end != -1:  # n times
                if self.isPalindrome(s[start:end+1]): #n times so --> n3
                    longest = max([longest,s[start:end+1]], key = len)
                end = s.rfind(c,start+1, end)
            start += 1
        return longest

    #2 pointer approach used. expand from small to big. Big O is n2
    def longest_palindrome(self, s: str) -> str:
        res = ""
        for i in range(len(s)):
            res = max(self.helper(s,i,i), self.helper(s,i,i+1), res, key=len)
        return res
       
        
    def helper(self,s,l,r):  
        while 0<=l and r < len(s) and s[l]==s[r]:
                l-=1; r+=1
        return s[l+1:r]
  
    def isPalindrome(self, s: str) -> bool:
        return s == s[::-1]
        

#print(Solution().longestPalindrome
print(Solution().longest_palindrome("babad"))
